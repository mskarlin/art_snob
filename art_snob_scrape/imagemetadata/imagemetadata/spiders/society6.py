import scrapy
import json
from imagemetadata.items import ArtSnobItem
from scrapy.shell import inspect_response


class Society6Scraper(scrapy.spiders.SitemapSpider):
    name = "society6"

    sitemap_urls = ["https://society6.com/sitemap/product/prints/prints_1.xml",
                    "https://society6.com/sitemap/product/prints/prints_2.xml"]

    def parse(self, response):

        # we extact out the data that we can pull from the html directly first
        image = [p for p in response.xpath('//img[contains(@imagestyle, "image_preview")]/@src').extract()]

        if len(image) > 0:
            image = image[0]

        name = response.xpath('//h1[@id="detailsProductType"]/text()').extract_first()
        description = response.xpath('//div[@id="product"]').xpath(
            '//meta[@itemprop="description"]/@content').extract_first()
        price = response.xpath('//span[@data-class="retail"]/text()').extract_first()
        sizes = '|'.join(response.xpath('//div[contains(@class,"ddOption_dropdown_")]/span/text()').extract())

        # get the data that we need to parse from JSON generated by JS
        script_raw = response.xpath('//script[contains(text(), "__INITIAL_STATE")]').extract_first()
        json_start = script_raw.find('{')
        json_end = script_raw[::-1].find('}')

        inspect_response(response, self)

        try:
            script_json = json.loads(script_raw[json_start:-json_end])

            tags = script_json['product']['response']['product']['data']['attributes']['creative']['tags']

            standard_tags = [t['label'] for t in tags]

        except:
            standard_tags = []

        yield ArtSnobItem(image_urls=image,
                          page_url=response.url,
                          name=name,
                          description=description,
                          price=price,
                          sizes=sizes,
                          artist='',
                          standard_tags=standard_tags)
